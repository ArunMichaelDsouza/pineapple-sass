// Background Size mixin
// Set background size for a background image
@mixin backgroundSize($backgroundSize) {
	-webkit-background-size: $backgroundSize;
	-moz-background-size: $backgroundSize;
	-o-background-size: $backgroundSize;
	background-size: $backgroundSize;
}

@function slice($list, $start: 1, $end: length($list)) {
  $result: null;
              
  @if type-of($start) != number or type-of($end) != number {
    @warn "Either $start or $end are not a number for `slice`.";
  }
             
  @else if $start > $end {
    @warn "The start index has to be lesser than or equals to the end index for `slice`.";
  }

  @else if $start < 1 or $end < 1 {
    @warn "List indexes must be non-zero integers for `slice`.";
  }

  @else if $start > length($list) {
    @warn "List index is #{$start} but list is only #{length($list)} item long for `slice`.";
  }
             
  @else if $end > length($list) {
    @warn "List index is #{$end} but list is only #{length($list)} item long for `slice`.";
  }
  
  @else {
    $result: ();
                
    @for $i from $start through $end {
      $result: append($result, nth($list, $i));
    }
  }

  @return $result;
}

// Background linear gradient mixin
// Add a linear gradient to any element's background
@mixin linearGradient($gradientValues...) {
	$firstValue: nth($gradientValues, 1);

	$list: (left, right, top, bottom);

	@each $side in $list {
		@if $side == $firstValue {
			$first: nth($gradientValues, 1);
			$len: length($gradientValues);
			$last: nth($gradientValues, $len);
			$s: slice($gradientValues, 2, $len);
			background: $s;
		}
	}

	// background: -webkit-linear-gradient($gradientValues);
	// background: -moz-linear-gradient($gradientValues);
	// background: -o-linear-gradient($gradientValues);
	// background: linear-gradient($gradientValues);
}

// Background repeating linear gradient mixin
// Add a repeating linear gradient to any element's background
@mixin repeatingLinearGradient($gradientValues...) {
	background: -webkit-repeating-linear-gradient($gradientValues);
	background: -moz-repeating-linear-gradient($gradientValues);
	background: -o-repeating-linear-gradient($gradientValues);
	background: repeating-linear-gradient($gradientValues);
}

// Background radial gradient mixin
// Add a radial gradient to any element's background
@mixin radialGradient($gradientValues...) {
	background: -webkit-radial-gradient($gradientValues);
	background: -o-radial-gradient($gradientValues);
	background: -moz-radial-gradient($gradientValues);
	background: radial-gradient($gradientValues);
}

// Background repeating radial gradient mixin
// Add a repeating radial gradient to any element's background
@mixin repeatingRadialGradient($gradientValues...) {
	background: -webkit-repeating-radial-gradient($gradientValues);
	background: -o-repeating-radial-gradient($gradientValues);
	background: -moz-repeating-radial-gradient($gradientValues);
	background: repeating-radial-gradient($gradientValues);
}
