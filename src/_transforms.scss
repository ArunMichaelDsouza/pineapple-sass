// Scale transform mixin
// Scale an element
@mixin scale($x, $y: 0) {
	@if $y != 0 {
	 	-webkit-transform: scale($x, $y);
		-moz-transform: scale($x, $y);
		-o-transform: scale($x, $y);
		-ms-transform: scale($x, $y);
		transform: scale($x, $y);
	}
	@else {
		-webkit-transform: scale($x, $x);
		-moz-transform: scale($x, $x);
		-o-transform: scale($x, $x);
		-ms-transform: scale($x, $x);
		transform: scale($x, $x);
	}
}

// Translate transform mixin
// Translate an element
@mixin translate($x, $y: 0) {
	-webkit-transform: translate($x, $y);
	-moz-transform: translate($x, $y);
	-o-transform: translate($x, $y);
	-ms-transform: translate($x, $y);
	transform: translate($x, $y);
}

// Rotate transform mixin
// Rotate an element
@mixin rotate($deg) {
	-webkit-transform: rotate($deg+deg);
	-moz-transform: rotate($deg+deg);
	-o-transform: rotate($deg+deg);
	-ms-transform: rotate($deg+deg);
	transform: rotate($deg+deg);
	-webkit-backface-visibility: hidden;
}

// Skew transform mixin
// Skew an element
@mixin skew($x, $y: 0) {
	-webkit-transform: skew($x+deg, $y+deg);
	-moz-transform: skew($x+deg, $y+deg);
	-o-transform: skew($x+deg, $y+deg);
	-ms-transform: skew($x+deg, $y+deg);
	transform: skew($x+deg, $y+deg);
	-webkit-backface-visibility: hidden;
}

// Flip transform mixin 
// Flip / mirror an element
@mixin flip {
    -webkit-transform: scaleX(-1);
	-moz-transform: scaleX(-1);
	-o-transform: scaleX(-1);
    transform: scaleX(-1);
    filter: FlipH;
   -ms-filter: "FlipH";
}
